package kdb.spring.web.controller;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kdb.spring.service.BoardService;
import kdb.spring.vo.BoardVo;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class BoardController {
	@Resource(name="boardService")
	private BoardService boardService;
	
	@RequestMapping(value = "/loadMyScrap.do", method = RequestMethod.POST)
	public ModelAndView loadMyScrap(HttpServletRequest request, HttpServletResponse response, HttpSession session){
		System.out.println("loadMyScrap::ENTER");
		String userNo = String.valueOf(session.getAttribute("userNo"));
		int curPage = Integer.parseInt(request.getParameter("curPage"));
		List<BoardVo> boardVoList = boardService.loadMyScrap(userNo);
		ArrayList<BoardVo> resultBoardVoList = new ArrayList<BoardVo>();
		
		int i=0;
		
		for(BoardVo vo : boardVoList){
			if((curPage-1)*12 <= i && i < curPage*12){
				resultBoardVoList.add(vo);
				System.out.println(vo);
			}
			i++;
		}
		
		ModelAndView mv = new ModelAndView("jsonView");
		mv.addObject("resultBoardVoList",resultBoardVoList);
		System.out.println("loadMyScrap::boardVoList.size() = "+boardVoList.size());
		System.out.println("loadMyScrap::curPage = "+curPage);
		System.out.println("loadMyScrap::END");
		return mv;
	}
	
	@RequestMapping(value = "/getNumOfMyScrap.do", method = RequestMethod.POST)
	public @ResponseBody String getNumOfMyScrap(HttpServletRequest request, HttpServletResponse response, HttpSession session) {                 
		 System.out.println("getNumOfMyScrap::");
		 String userNo = String.valueOf(session.getAttribute("userNo"));
		 return String.valueOf(boardService.getNumOfMyScrap(userNo));
	  }
	
	/**
	 * 해시태그 검색
	 * */
	@RequestMapping("/searchTag.do")
	public ModelAndView search(String tag, HttpSession session){
		
		List<BoardVo> list = boardService.search(tag);
		ModelAndView mv = new ModelAndView();
		mv.addObject("list", list);
		mv.setViewName("jsonView");
		System.out.println("==========================================");
		System.out.println(list);

		return mv;
	}
	
	/**
	 * 상세보기
	 * */
	@RequestMapping("/read.do")
	public ModelAndView detail(int boardNo){
		
		BoardVo vo = boardService.detail(boardNo);
		ModelAndView mv = new ModelAndView();
		mv.addObject("boardNo", vo.getBoardNo());
		mv.addObject("title",vo.getTitle());
		mv.addObject("userNick",vo.getUserNick());
		mv.addObject("boardDate",vo.getBoardDate());
		mv.addObject("recom",vo.getRecom());
		mv.addObject("viewcnt",vo.getViewcnt());
		
		mv.setViewName("jsonView");
		System.out.println("==========================================");
		System.out.println(mv);
		System.out.println(boardNo);
		return mv;
	}
	
	/**
	 * 조회수증가
	 * */
	@RequestMapping("/viewCnt.do")
	public ModelAndView viewCnt(int boardNo){
				
		int data = boardService.viewCnt(boardNo);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data",data);
		mv.setViewName("jsonView");
		System.out.println("==============================");
		System.out.println(data);
		return mv;
	}
	
	/**
	 * 추천수증가
	 * */
	@RequestMapping("/recom.do")
	public ModelAndView recomCnt(int boardNo){
		
		int data = boardService.recomCnt(boardNo);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data",data);
		mv.setViewName("jsonView");
		System.out.println("==============================");
		System.out.println(data);
		return mv;
	}
	
}
