package kdb.spring.web.controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import kdb.spring.service.BoardService;
import kdb.spring.service.MagazineService;
import kdb.spring.service.UserService;
import kdb.spring.vo.BoardVo;
import kdb.spring.vo.FriendVo;
import kdb.spring.vo.MagazineVo;
import kdb.spring.vo.UserVo;
import mail.MailSend;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import pdf.MakePdf;

import com.itextpdf.text.DocumentException;



@Controller
public class MagazineController {	
	@Resource(name="magazineService") //객체 생성.
	private MagazineService magazineService;	
	
	/**
	 * magazine table에 insert
	 * */
	@RequestMapping("/magazineInsert.do")
	public ModelAndView insert(@RequestParam(value="boardNoList")List<String> list,HttpSession session){
		MagazineVo vo = new MagazineVo();	
		int data=0;
		for(String boardList:list)
		{
			int boardNo=Integer.parseInt(boardList);
			vo.setMmemNo((int)session.getAttribute("userNo"));
			vo.setBoardNo(boardNo);
			data = magazineService.magazineInsert(vo);
		}	
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", data);
		mv.setViewName("jsonView");
		return mv;
	}

	/**
	 * pdf만들기
	 * */
	@RequestMapping("/makePdf.do")
	public ModelAndView makePdf(@RequestParam(value="boardNoList2")List<String> list,HttpSession session){
		MagazineVo vo = new MagazineVo();	
		List<String> imgList=null;
		String path= session.getServletContext().getRealPath("/save/");
		for(String boardList:list)
		{			
			int boardNo=Integer.parseInt(boardList);
			vo.setMmemNo((int)session.getAttribute("userNo"));
			vo.setBoardNo(boardNo);
			imgList = magazineService.makePdf(vo);
		}	
		MakePdf pdf = new MakePdf();		
		try {
			pdf.makePdf(imgList,path);
		} catch (DocumentException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", imgList);
		mv.setViewName("jsonView");
		return mv;
	}
	
	/**
	 * 체크된 게시글 삭제
	 * */
	@RequestMapping("/magazineDelete.do")
	public ModelAndView delete(@RequestParam(value="boardNoList3")List<String> list,HttpSession session){
		MagazineVo vo = new MagazineVo();	
		int data=0;
		for(String boardList:list)
		{
			int boardNo=Integer.parseInt(boardList);
			vo.setMmemNo((int)session.getAttribute("userNo"));
			vo.setBoardNo(boardNo);
			data = magazineService.magazineDelete(vo);
		}	
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", data);
		mv.setViewName("jsonView");
		return mv;
	}
		
}
